// Generated by Haxe 4.0.0-preview.5
(function () { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var crazyflie_web_App = function() { };
crazyflie_web_App.__name__ = true;
crazyflie_web_App.update = function() {
	var gamepads = window.navigator.getGamepads();
	if(crazyflie_web_App.gamepad == null) {
		var _g = 0;
		while(_g < gamepads.length) {
			var gp = gamepads[_g];
			++_g;
			if(gp != null) {
				crazyflie_web_App.gamepad = gp;
				crazyflie_web_App.log("Gamepad connected [" + crazyflie_web_App.gamepad.id + "]");
				break;
			}
		}
	}
	var pitch = 0.0;
	var roll = 0.0;
	var yaw = 0.0;
	var thrust = 0;
	if(crazyflie_web_App.gamepad != null) {
		thrust = crazyflie_web_App.gamepad.axes[1] * -55000 | 0;
		yaw = crazyflie_web_App.gamepad.axes[0] * 200;
		pitch = crazyflie_web_App.gamepad.axes[3] * 30;
		roll = crazyflie_web_App.gamepad.axes[2] * 30;
	}
	if(thrust < 500) {
		thrust = 0;
	}
	yaw = Math.min(yaw,crazyflie_web_App.flightControl.maxYaw);
	crazyflie_web_App.thrustElement.textContent = "Thrust: " + thrust;
	crazyflie_web_App.yawElement.textContent = "Yaw: " + yaw;
	crazyflie_web_App.pitchElement.textContent = "Pitch: " + pitch;
	crazyflie_web_App.rollElement.textContent = "Roll: " + roll;
	if(crazyflie_web_App.radio != null) {
		crazyflie_web_App.radio.sendSetpoint(roll,pitch,yaw,thrust);
	}
};
crazyflie_web_App.log = function(msg) {
	window.console.log(msg);
};
crazyflie_web_App.main = function() {
	window.onload = function() {
		crazyflie_web_App.flightControl = new crazyflie_web_FlightControl();
		var inputElement = window.document.getElementById("input");
		crazyflie_web_App.thrustElement = inputElement.querySelector(".thrust");
		crazyflie_web_App.yawElement = inputElement.querySelector(".yaw");
		crazyflie_web_App.pitchElement = inputElement.querySelector(".pitch");
		crazyflie_web_App.rollElement = inputElement.querySelector(".roll");
		var timer = new haxe_Timer(30);
		timer.run = crazyflie_web_App.update;
		crazyflie_web_App.log("Searching radio devices ...");
		crazyflie_web_Crazyradio.findDevices().then(function(devices) {
			if(devices.length != 0) {
				var _g = 0;
				while(_g < devices.length) {
					var dev = [devices[_g]];
					++_g;
					var btn = [window.document.createElement("button")];
					btn[0].textContent = "RADIO [" + Std.string(dev[0].serialNumber) + "]";
					window.document.getElementById("devices").appendChild(btn[0]);
					btn[0].onclick = (function(btn1,dev1) {
						return function() {
							crazyflie_web_App.radio = new crazyflie_web_Crazyradio(dev1[0]);
							crazyflie_web_App.radio.open().then((function(btn2) {
								return function(_) {
									crazyflie_web_App.log("Radio connected");
									btn2[0].classList.add("connected");
									crazyflie_web_App.radio.scanChannel(80).then((function() {
										return function(_1) {
											console.log("src/crazyflie/web/App.hx:143:",">");
										};
									})());
								};
							})(btn1));
						};
					})(btn,dev);
				}
			}
		});
	};
};
var crazyflie_web_Crazyradio = function(device) {
	this.device = device;
};
crazyflie_web_Crazyradio.__name__ = true;
crazyflie_web_Crazyradio.findDevices = function() {
	var usb = navigator.usb;
	return usb.getDevices().then(function(found) {
		return found.filter(function(dev) {
			if(dev.productId == 30583) {
				return dev.vendorId == 6421;
			} else {
				return false;
			}
		});
	});
};
crazyflie_web_Crazyradio.prototype = {
	open: function() {
		var _gthis = this;
		return this.device.open().then(function(r) {
			return _gthis.device.selectConfiguration(1);
		}).then(function(r1) {
			return _gthis.device.claimInterface(0);
		}).then(function(r2) {
			return _gthis.setAddress();
		}).then(function(r3) {
			return _gthis.setDataRate(0);
		}).then(function(r4) {
			return _gthis.setACKEnable(true);
		});
	}
	,scanChannel: function(channel) {
		var _gthis = this;
		return this.setChannel(channel).then(function(r) {
			var buf = new ArrayBuffer(1);
			var view = new DataView(buf);
			view.setUint8(0,255);
			_gthis.sendPacket(buf).then(function(r1) {
				var decoder = new TextDecoder();
				window.console.log(decoder.decode(r1.data));
			});
		});
	}
	,setDataRate: function(datarate) {
		return this.sendVendorSetup(3,datarate,0);
	}
	,setChannel: function(channel) {
		return this.sendVendorSetup(1,channel,0);
	}
	,setAddress: function() {
		return this.sendVendorSetup(2,0,0);
	}
	,setACKEnable: function(enable) {
		return this.sendVendorSetup(16,enable ? 1 : 0,0);
	}
	,sendVendorSetup: function(request,value,index,data) {
		if(data == null) {
			data = new ArrayBuffer(0);
		}
		return this.device.controlTransferOut({ requestType : "vendor", recipient : "device", request : request, value : value, index : index},data);
	}
	,sendSetpoint: function(roll,pitch,yaw,thrust) {
		var buf = new ArrayBuffer(15);
		var view = new DataView(buf);
		view.setUint8(0,48);
		view.setFloat32(1,roll,true);
		view.setFloat32(5,pitch,true);
		view.setFloat32(9,yaw,true);
		view.setUint16(13,thrust,true);
		return this.sendPacket(buf);
	}
	,sendPacket: function(data) {
		var _gthis = this;
		return this.device.transferOut(1,data).then(function(r) {
			return _gthis.device.transferIn(1,64);
		});
	}
};
var crazyflie_web_FlightControl = function() {
	this.maxYaw = 200.0;
};
crazyflie_web_FlightControl.__name__ = true;
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	run: function() {
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
crazyflie_web_App.main();
})();

//# sourceMappingURL=app.js.map